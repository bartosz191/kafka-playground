version: '3.3'

services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  riemannfront:
    image: riemannio/riemann:0.3.3
    hostname: riemannfront
    volumes:
      - ./riemannfront.config:/etc/riemann.config
    ports:
      - "3003:3003" # graphite port (shifted to avoid conflict with carbon-clickhouse)
    depends_on:
      - kafka

  riemannback:
    image: riemannio/riemann:0.3.3
    hostname: riemannback
    volumes:
      - ./riemannback.config:/etc/riemann.config
    depends_on:
      - kafka

  clickhouse:
    image: yandex/clickhouse-server
    hostname: clickhouse
    volumes:
      - "./rollup.xml:/etc/clickhouse-server/config.d/rollup.xml"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
    ports:
      - "8123:8123"
    depends_on:
      - zookeeper

  carbon-relay-ng:
    image: raintank/carbon-relay-ng
    hostname: carbon-relay-ng
    volumes:
      - ./carbon-relay-ng.ini:/conf/carbon-relay-ng.ini
    ports:
      - "2003:2003"
      - "8081:8081"

  carbon-clickhouse:
    build:
      dockerfile: carbon-clickhouse.dockerfile
      context: ./Dockerfiles
    hostname: carbon-clickhouse1
    volumes:
      - "./data/carbon-clickhouse:/data/carbon-clickhouse"
      - "./carbon-clickhouse.conf:/etc/carbon-clickhouse/carbon-clickhouse.conf"
    ports:
      - "2013:2013" # plain tcp
    depends_on:
      - clickhouse

  graphite-clickhouse:
    image: lomik/graphite-clickhouse:v0.11.1
    volumes:
      - "./rollup.xml:/etc/graphite-clickhouse/rollup.xml"
      - "./graphite-clickhouse.conf:/etc/graphite-clickhouse/graphite-clickhouse.conf"
    depends_on:
      - clickhouse

  carbonapi:
    image: mosquito/carbonapi
    hostname: carbonapi
    ports:
      - 8080:8080
    environment:
      CONCURENCY: 20
      CACHE_TYPE: mem
      UPSTREAMS_BACKENDS: http://graphite-clickhouse:9090/
      LISTEN: "0.0.0.0:8080"
    depends_on:
      - graphite-clickhouse

  grafana:
    image: grafana/grafana
    hostname: grafana
    ports:
      - 3000:3000
    environment:
      GF_SERVER_ROOT_URL: http://0.0.0.0:3000
      GF_SECURITY_ADMIN_PASSWORD: secret
    depends_on:
      - carbonapi

  collectd:
    build:
       dockerfile: collectd.dockerfile
       context: ./Dockerfiles
    hostname: collectd
    volumes:
        - ./collectd.conf:/etc/collectd/collectd.conf
    depends_on:
      - kafka
      - riemannfront

  load-1:
    build:
       dockerfile: haggar.dockerfile
       context: ./Dockerfiles
    hostname: haggar
    environment:
       AGENTS: ${AGENTS}
       INTERVAL: ${INTERVAL}
       JITTER: ${JITTER}
       METRICS: ${METRICS}
       SPAWN: ${SPAWN}
       PREFIX: load1

  load-2:
    build:
       dockerfile: haggar.dockerfile
       context: ./Dockerfiles
    hostname: haggar
    environment:
       AGENTS: ${AGENTS}
       INTERVAL: ${INTERVAL}
       JITTER: ${JITTER}
       METRICS: ${METRICS}
       SPAWN: ${SPAWN}
       PREFIX: load2

  load-3:
    build:
       dockerfile: haggar.dockerfile
       context: ./Dockerfiles
    hostname: haggar
    environment:
       AGENTS: ${AGENTS}
       INTERVAL: ${INTERVAL}
       JITTER: ${JITTER}
       METRICS: ${METRICS}
       SPAWN: ${SPAWN}
       PREFIX: load3
