version: '3.0'
services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    links:
      - zookeeper

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.0
    hostname: elasticsearch
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1

  kibana:
    image: docker.elastic.co/kibana/kibana:6.8.0
    hostname: kibana
    ports:
      - 5601:5601
    links:
      - elasticsearch

  logstash-producer:
    image: 11111111111.dkr.ecr.eu-west-2.amazonaws.com/logstash_producer:latest
    hostname: logstash-producer
    links:
      - kafka
      - elasticsearch

  logstash-consumer:
    image: 11111111111.dkr.ecr.eu-west-2.amazonaws.com/logstash_consumer:latest
    hostname: logstash-consumer
    links:
      - elasticsearch
      - kafka
