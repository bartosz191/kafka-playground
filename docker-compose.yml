version: '3.7'

services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    hostname: kafka
    ports:
      - "9092:9092"
      - "19092:19092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  riemann:
    image: riemannio/riemann:0.3.3
    hostname: riemann
    volumes:
      - ./riemann.config:/etc/riemann.config
    environment:
      - HOST_IP=${DOCKER_HOST_IP:-127.0.0.1}
    depends_on:
      - kafka
#      - elasticsearch

  clickhouse:
    image: yandex/clickhouse-server
#    image: yandex/clickhouse-server:19.6.2.11
    hostname: clickhouse
    volumes:
      - "./rollup.xml:/etc/clickhouse-server/config.d/rollup.xml"
      - "./init.sql:/docker-entrypoint-initdb.d/init.sql"
#      - "./data/clickhouse/data:/var/lib/clickhouse/data"
#      - "./data/clickhouse/metadata:/var/lib/clickhouse/metadata"
    depends_on:
      - zookeeper

#  elasticsearch:
#    image: docker.elastic.co/elasticsearch/elasticsearch:6.8.0
#    hostname: elasticsearch
#    ports:
#      - 9200:9200
#      - 9300:9300
#    environment:
#      - cluster.name=elasticsearch
#      - bootstrap.memory_lock=true
#      - http.cors.enabled=true
#      - http.cors.allow-origin=*
#      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
#    ulimits:
#      memlock:
#        soft: -1
#        hard: -1
#
#  kibana:
#    image: docker.elastic.co/kibana/kibana:6.8.0
#    hostname: kibana
#    ports:
#      - 5601:5601
#    depends_on:
#      - elasticsearch

  carbon-clickhouse:
    image: lomik/carbon-clickhouse:v0.10.2
    hostname: carbon-clickhouse
    volumes:
      - "./data/carbon-clickhouse:/data/carbon-clickhouse"
      - "./carbon-clickhouse.conf:/etc/carbon-clickhouse/carbon-clickhouse.conf"
    ports:
      - "2003:2003" # plain tcp
      - "2004:2004" # pickle
      - "2006:2006" # prometheus remote write
    depends_on:
      - clickhouse
#
#  graphite-clickhouse:
#    image: lomik/graphite-clickhouse:v0.11.1
#    hostname: graphite-clickhouse
#    volumes:
#      - "./rollup.xml:/etc/graphite-clickhouse/rollup.xml"
#      - "./graphite-clickhouse.conf:/etc/graphite-clickhouse/graphite-clickhouse.conf"
#    ports:
#      - 9090:9090
#    depends_on:
#      - clickhouse
#      - carbon-clickhouse
#
#  carbonapi:
#    image: mosquito/carbonapi
#    hostname: carbonapi
#    ports:
#      - 8080:8080
#    environment:
#      CONCURENCY: 20
#      CACHE_TYPE: mem
#      UPSTREAMS_BACKENDS: http://graphite-clickhouse:9090/
#      LISTEN: "0.0.0.0:8080"
#    depends_on:
#      - graphite-clickhouse
#
#  tabix:
#    image: spoonest/clickhouse-tabix-web-client
#    hostname: tabix
#    links:
#      - clickhouse
#    ports:
#      - 8090:80
#
#  grafana:
#    image: grafana/grafana
#    hostname: grafana
#    links:
#      - carbonapi
#    ports:
#      - 3000:3000
#    environment:
#      GF_SERVER_ROOT_URL: http://${DOCKER_HOST_IP:-127.0.0.1}:3000
#      GF_SECURITY_ADMIN_PASSWORD: secret
#    depends_on:
#      - carbonapi
#
#  logstash-post:
#    image: docker.elastic.co/logstash/logstash:7.3.1
#    hostname: logstash-post
#    depends_on:
#      - elasticsearch

  collectd:
    image: collectd
    hostname: collectd
    volumes:
        - ./collectd.conf:/etc/collectd/collectd.conf
    depends_on:
      - kafka
